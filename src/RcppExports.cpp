// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_hat_mat_list
arma::cube compute_hat_mat_list(arma::mat& X);
RcppExport SEXP _GBoost_compute_hat_mat_list(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_hat_mat_list(X));
    return rcpp_result_gen;
END_RCPP
}
// model_fitting
List model_fitting(arma::mat& X, arma::vec& y, arma::vec& x_size, int& total_steps, double& step_size, arma::uvec& adj_var, double stop_tol, double gamma, Rcpp::String stop_method);
RcppExport SEXP _GBoost_model_fitting(SEXP XSEXP, SEXP ySEXP, SEXP x_sizeSEXP, SEXP total_stepsSEXP, SEXP step_sizeSEXP, SEXP adj_varSEXP, SEXP stop_tolSEXP, SEXP gammaSEXP, SEXP stop_methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type x_size(x_sizeSEXP);
    Rcpp::traits::input_parameter< int& >::type total_steps(total_stepsSEXP);
    Rcpp::traits::input_parameter< double& >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type adj_var(adj_varSEXP);
    Rcpp::traits::input_parameter< double >::type stop_tol(stop_tolSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type stop_method(stop_methodSEXP);
    rcpp_result_gen = Rcpp::wrap(model_fitting(X, y, x_size, total_steps, step_size, adj_var, stop_tol, gamma, stop_method));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GBoost_compute_hat_mat_list", (DL_FUNC) &_GBoost_compute_hat_mat_list, 1},
    {"_GBoost_model_fitting", (DL_FUNC) &_GBoost_model_fitting, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_GBoost(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
